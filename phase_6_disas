=> 0x000000000040117a <+0>:	push   %r13
   0x000000000040117c <+2>:	push   %r12
   0x000000000040117e <+4>:	push   %rbp
   0x000000000040117f <+5>:	push   %rbx
   0x0000000000401180 <+6>:	sub    $0x58,%rsp
   0x0000000000401184 <+10>:	lea    0x30(%rsp),%rsi
   0x0000000000401189 <+15>:	callq  0x401625 <read_six_numbers> //six numbers
   0x000000000040118e <+20>:	lea    0x30(%rsp),%r13 /input
   0x0000000000401193 <+25>:	mov    $0x0,%r12d
   ----------------------------------------------------------------- start outside loop
   0x0000000000401199 <+31>:	mov    %r13,%rbp input
   0x000000000040119c <+34>:	mov    0x0(%r13),%eax //input - 1
   0x00000000004011a0 <+38>:	sub    $0x1,%eax //subtract 1 from eax
   0x00000000004011a3 <+41>:	cmp    $0x5,%eax //
   0x00000000004011a6 <+44>:	jbe    0x4011ad <phase_6+51> //jump if first greater than or equal to second
   0x00000000004011a8 <+46>:	callq  0x4015ef <explode_bomb>
   0x00000000004011ad <+51>:	add    $0x1,%r12d //+44 jumps here; add 1
   0x00000000004011b1 <+55>:	cmp    $0x6,%r12d // == 6?
   0x00000000004011b5 <+59>:	jne    0x4011be <phase_6+68>
   0x00000000004011b7 <+61>:	mov    $0x0,%esi
   0x00000000004011bc <+66>:	jmp    0x401200 <phase_6+134>
   0x00000000004011be <+68>:	mov    %r12d,%ebx //+59 jumps here
   ------------------------------------------------------ start inside loop
   0x00000000004011c1 <+71>:	movslq %ebx,%rax
   0x00000000004011c4 <+74>:	mov    0x30(%rsp,%rax,4),%eax //= set to inputs starts at 2
   0x00000000004011c8 <+78>:	cmp    %eax,0x0(%rbp) //eax , compare to first input
   0x00000000004011cb <+81>:	jne    0x4011d2 <phase_6+88> // we don't want first input to be 2
   0x00000000004011cd <+83>:	callq  0x4015ef <explode_bomb>
   0x00000000004011d2 <+88>:	add    $0x1,%ebx //increment counter
   0x00000000004011d5 <+91>:	cmp    $0x5,%ebx //condition for loop
   0x00000000004011d8 <+94>:	jle    0x4011c1 <phase_6+71>// loops back
   -------------------------------------------------------- end inside loop
   0x00000000004011da <+96>:	add    $0x4,%r13
   0x00000000004011de <+100>:	jmp    0x401199 <phase_6+31>
   ----------------------------------------------------------------- end outside loop
   0x00000000004011e0 <+102>:	mov    0x8(%rdx),%rdx
   0x00000000004011e4 <+106>:	add    $0x1,%eax
   0x00000000004011e7 <+109>:	cmp    %ecx,%eax
   0x00000000004011e9 <+111>:	jne    0x4011e0 <phase_6+102>
   0x00000000004011eb <+113>:	jmp    0x4011f2 <phase_6+120>
   0x00000000004011ed <+115>:	mov    $0x604300,%edx
   0x00000000004011f2 <+120>:	mov    %rdx,(%rsp,%rsi,2)
   0x00000000004011f6 <+124>:	add    $0x4,%rsi
   0x00000000004011fa <+128>:	cmp    $0x18,%rsi
   0x00000000004011fe <+132>:	je     0x401215 <phase_6+155>
   0x0000000000401200 <+134>:	mov    0x30(%rsp,%rsi,1),%ecx
   0x0000000000401204 <+138>:	cmp    $0x1,%ecx
   0x0000000000401207 <+141>:	jle    0x4011ed <phase_6+115>
   0x0000000000401209 <+143>:	mov    $0x1,%eax
   0x000000000040120e <+148>:	mov    $0x604300,%edx
   0x0000000000401213 <+153>:	jmp    0x4011e0 <phase_6+102>
   0x0000000000401215 <+155>:	mov    (%rsp),%rbx
   0x0000000000401219 <+159>:	lea    0x8(%rsp),%rax
   0x000000000040121e <+164>:	lea    0x30(%rsp),%rsi
   0x0000000000401223 <+169>:	mov    %rbx,%rcx
   0x0000000000401226 <+172>:	mov    (%rax),%rdx
   0x0000000000401229 <+175>:	mov    %rdx,0x8(%rcx)
   0x000000000040122d <+179>:	add    $0x8,%rax
   0x0000000000401231 <+183>:	cmp    %rsi,%rax
   0x0000000000401234 <+186>:	je     0x40123b <phase_6+193>
   0x0000000000401236 <+188>:	mov    %rdx,%rcx
   0x0000000000401239 <+191>:	jmp    0x401226 <phase_6+172>
   0x000000000040123b <+193>:	movq   $0x0,0x8(%rdx)
   0x0000000000401243 <+201>:	mov    $0x5,%ebp
   0x0000000000401248 <+206>:	mov    0x8(%rbx),%rax
   0x000000000040124c <+210>:	mov    (%rax),%eax
   0x000000000040124e <+212>:	cmp    %eax,(%rbx) //rbx should be less than eax
   0x0000000000401250 <+214>:	jle    0x401257 <phase_6+221>
   0x0000000000401252 <+216>:	callq  0x4015ef <explode_bomb>
   0x0000000000401257 <+221>:	mov    0x8(%rbx),%rbx
   0x000000000040125b <+225>:	sub    $0x1,%ebp
   0x000000000040125e <+228>:	jne    0x401248 <phase_6+206>
   0x0000000000401260 <+230>:	add    $0x58,%rsp
   0x0000000000401264 <+234>:	pop    %rbx
   0x0000000000401265 <+235>:	pop    %rbp
   0x0000000000401266 <+236>:	pop    %r12
   0x0000000000401268 <+238>:	pop    %r13
   0x000000000040126a <+240>:	retq
